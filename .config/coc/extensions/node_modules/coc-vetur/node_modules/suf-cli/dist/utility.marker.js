"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getGenerated = exports.getMarkedInput = exports.insertionMarker = void 0;
var fs_1 = require("fs");
exports.insertionMarker = {
    marker: 'SUF_CLI_DOC_INSERTION_MARKER',
    regex: /SUF_CLI_DOC_INSERTION_MARKER/g
};
var Markers = {
    tsDoc: {
        regex: /<span id="DOC_GENERATION_MARKER_0"><\/span>[\S\s]*<span id="DOC_GENERATION_MARKER_1"><\/span>/,
        marker: '<span id="DOC_GENERATION_MARKER_0"></span>\n__INSERT_GENERATED__\n_Generated with_ **[suf-cli](https://www.npmjs.com/package/suf-cli)**\n<span id="DOC_GENERATION_MARKER_1"></span>'
    },
    badges: {
        regex: /<span id="BADGE_GENERATION_MARKER_0"><\/span>[\S\s]*<span id="BADGE_GENERATION_MARKER_1"><\/span>/,
        marker: '<span id="BADGE_GENERATION_MARKER_0"></span>\n__INSERT_GENERATED__\n<span id="BADGE_GENERATION_MARKER_1"></span>'
    },
    license: {
        regex: /<span id="LICENSE_GENERATION_MARKER_0"><\/span>[\S\s]*<span id="LICENSE_GENERATION_MARKER_1"><\/span>/,
        marker: '<span id="LICENSE_GENERATION_MARKER_0"></span>\n__INSERT_GENERATED__\n<span id="LICENSE_GENERATION_MARKER_1"></span>'
    }
};
function getMarkedInput(file, type) {
    var input = exports.insertionMarker.marker;
    if (fs_1.existsSync(file)) {
        var inputFile = fs_1.readFileSync(file).toString();
        input = inputFile.replace(Markers[type].regex, exports.insertionMarker.marker);
        if (!exports.insertionMarker.regex.test(input)) {
            input += "\n" + exports.insertionMarker.marker;
        }
    }
    return input;
}
exports.getMarkedInput = getMarkedInput;
function getGenerated(generatedText, type) {
    return Markers[type].marker.replace(/__INSERT_GENERATED__/, generatedText);
}
exports.getGenerated = getGenerated;
