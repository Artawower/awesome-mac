{
  "to": {
    "type": "string | object",
    "description": "Denotes the target route of the link. When clicked, the value of the to prop will be passed to router.push() internally, so the value can be either a string or a location descriptor object."
  },
  "active-class": {
    "type": "string",
    "description": "Configure the active CSS class applied when the link is active."
  },
  "exact": {
    "type": "string | array<string>",
    "description": "The default active class matching behavior is inclusive match. For example, <router-link to=\"/a\"> will get this class applied as long as the current path starts with /a/ or is /a.\nOne consequence of this is that <router-link to=\"/\"> will be active for every route! To force the link into \"exact match mode\", use the exact prop: <router-link to=\"/\" exact>"
  },
  "exact-active-class": {
    "type": "string",
    "description": "Configure the active CSS class applied when the link is active with exact match. Note the default value can also be configured globally via the linkExactActiveClass router constructor option."
  },
  "src": {
    "type": "string",
    "description": "Relative path to image file."
  },
  "width": {
    "type": "number",
    "description": "Resize image to specified width in pixels."
  },
  "height": {
    "type": "number",
    "description": "Crop & resize image to specified height in pixels."
  },
  "alt": {
    "type": "string",
    "description": "Alternate text for the image."
  },
  "fit": {
    "type": "string",
    "description": "How to crop images. See properties below. https://gridsome.org/docs/images#fit-options"
  },
  "background": {
    "type": "string",
    "description": "Background color for 'contain' ."
  },
  "immediate": {
    "type": "boolean",
    "description": "Set to `true` to disable lazy-loading."
  },
  "blur": {
    "type": "number",
    "description": "How much in px to blur the image placeholder."
  },
  "quality": {
    "type": "number",
    "description": "The quality of the image. (0 - 100)."
  },
  "info": {
    "type": "number",
    "description": "Page info from GraphQL result with totalPages."
  },
  "showLinks": {
    "type": "boolean",
    "description": "Show navigation links."
  },
  "showNavigation": {
    "type": "boolean",
    "description": "Show previous and next links."
  },
  "linkClass": {
    "type": "string",
    "description": "Add custom classes to the links."
  },
  "firstLabel": {
    "type": "string",
    "description": "Content for the first page navigation link. Default: \"<<\""
  },
  "prevLabel": {
    "type": "string",
    "description": "Content for the previous page navigation link. Default: \"<\""
  },
  "nextLabel": {
    "type": "string",
    "description": "Content for the next page navigation link. Default: \">\""
  },
  "lastLabel": {
    "type": "string",
    "description": "Content for the last page navigation link. Default: \">>\""
  },
  "ariaLabel": {
    "type": "string",
    "description": "Accessibility definition for the whole component. Default: \"Pagination Navigation\""
  },
  "ariaLinkLabel": {
    "type": "string",
    "description": "Accessibility definition for the page navigation links. Default: \"Go to page %n\""
  },
  "ariaFirstLabel": {
    "type": "string",
    "description": "Accessibility definition for the first page navigation link. Default: \"Go to first page\""
  },
  "ariaCurrentLabel": {
    "type": "string",
    "description": "Accessibility definition for the current page navigation link. Default: \"Current page. Page %n\""
  },
  "ariaPrevLabel": {
    "type": "string",
    "description": "Accessibility definition for the previous page navigation link. Default: \"Go to previous page. Page %n\""
  },
  "ariaNextLabel": {
    "type": "string",
    "description": "Accessibility definition for the next page navigation link. Default: \"Go to next page. Page %n\""
  },
  "ariaLastLabel": {
    "type": "string",
    "description": "Accessibility definition for the last page navigation link. Default: \"Go to last page. Page %n\""
  }
}
