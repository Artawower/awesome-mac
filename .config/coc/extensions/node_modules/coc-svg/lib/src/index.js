"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var coc_nvim_1 = require("coc.nvim");
var svgCompletionItemProvider_1 = require("./features/svgCompletionItemProvider");
var svgSymbolProvider_1 = require("./features/svgSymbolProvider");
var svgHoverProvider_1 = require("./features/svgHoverProvider");
var svgRenameProvider_1 = require("./features/svgRenameProvider");
var svgDefinitionProvider_1 = require("./features/svgDefinitionProvider");
var svgFormattingProvider_1 = require("./features/svgFormattingProvider");
var svgMinify_1 = require("./features/svgMinify");
var svgPretty_1 = require("./features/svgPretty");
var svgPreviewer_1 = require("./features/svgPreviewer");
var SVG_MODE = [
    {
        scheme: "file",
        language: "svg"
    },
    {
        scheme: "untitled",
        language: "svg"
    },
    {
        scheme: "file",
        language: "xml",
        pattern: "*.svg"
    }
];
function activate(context) {
    var priority = coc_nvim_1.workspace.getConfiguration('svg').get('priority');
    var d1 = coc_nvim_1.languages.registerCompletionItemProvider('svg', 'svg', ['svg', 'xml'], new svgCompletionItemProvider_1.SVGCompletionItemProvider(), ['<', ' ', '=', '"', "'"], priority);
    var d2 = coc_nvim_1.languages.registerDocumentSymbolProvider(SVG_MODE, new svgSymbolProvider_1.SvgSymbolProvider());
    var d3 = coc_nvim_1.languages.registerHoverProvider(SVG_MODE, new svgHoverProvider_1.SvgHoverProvider());
    var d4 = coc_nvim_1.languages.registerRenameProvider(SVG_MODE, new svgRenameProvider_1.SvgRenameProvider());
    var d5 = coc_nvim_1.languages.registerDefinitionProvider(SVG_MODE, new svgDefinitionProvider_1.SvgDefinitionProvider());
    var d6 = coc_nvim_1.languages.registerDocumentFormatProvider(SVG_MODE, new svgFormattingProvider_1.SvgFormattingProvider());
    var d7 = coc_nvim_1.commands.registerCommand('svg.showSvg', svgPreviewer_1.svgPreviewer);
    var d8 = coc_nvim_1.commands.registerCommand('svg.minifySvg', svgMinify_1.svgMinify);
    var d9 = coc_nvim_1.commands.registerCommand('svg.prettySvg', svgPretty_1.svgPretty);
    context.subscriptions.push(d1, d2, d3, d4, d5, d6, d7, d8, d9);
}
exports.activate = activate;
// this method is called when your extension is deactivated
function deactivate() { }
exports.deactivate = deactivate;
//# sourceMappingURL=index.js.map