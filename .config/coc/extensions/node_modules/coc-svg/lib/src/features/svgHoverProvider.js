"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var coc_nvim_1 = require("coc.nvim");
var svg_1 = require("./svg");
var utils = tslib_1.__importStar(require("./utils"));
var svg = null;
var SvgHoverProvider = /** @class */ (function () {
    function SvgHoverProvider() {
        if (svg == null) {
            svg = svg_1.getSvgJson();
        }
    }
    SvgHoverProvider.prototype.provideHover = function (document, position, token) {
        var doc = coc_nvim_1.workspace.getDocument(document.uri);
        var range = doc.getWordRangeAtPosition(position);
        var prevChar = utils.getOffsetString(document, range.start, -1);
        var nextChar = utils.getOffsetString(document, range.end, 1);
        var tag = null;
        var attribute = null;
        if (prevChar == '<' && nextChar == ' ') {
            tag = document.getText(range);
        }
        else if (/\s/.test(prevChar) && nextChar === '=') {
            attribute = document.getText(range);
        }
        if (tag) {
            if (svg.elements[tag]) {
                var ele = svg.elements[tag];
                return utils.createHover({
                    language: 'markdown',
                    value: '<' + tag + '>\n' + ele.documentation
                });
            }
        }
        if (attribute) {
            if (svg.attributes[attribute]) {
                var ele = svg.attributes[attribute];
                return utils.createHover({
                    language: 'markdown',
                    value: '[' + attribute + ']\n' + ele.documentation
                });
            }
        }
        return undefined;
    };
    return SvgHoverProvider;
}());
exports.SvgHoverProvider = SvgHoverProvider;
//# sourceMappingURL=svgHoverProvider.js.map