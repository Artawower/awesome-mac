"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const safe_1 = __importDefault(require("colors/safe"));
const regex = /^(\S+)\s+(\S+)\s+(.*)$/;
class Maps {
    constructor(nvim) {
        this.nvim = nvim;
        this.name = 'maps';
        this.description = 'key mappings';
        this.defaultAction = 'open';
        this.actions = [];
        this.options = [{
                name: '-mode=[i,n,v,x,s]',
                description: 'Filter mappings by mode.'
            }];
        this.actions.push({
            name: 'open',
            execute: async (item) => {
                if (Array.isArray(item))
                    return;
                let { mode, key } = item.data;
                let res = await nvim.eval(`split(execute("verbose ${mode}map ${key}"),"\n")[-1]`);
                if (/Last\sset\sfrom/.test(res)) {
                    let filepath = res.replace(/^\s+Last\sset\sfrom\s+/, '');
                    nvim.command(`edit +/${key} ${filepath}`, true);
                }
            }
        });
    }
    async loadItems(context) {
        let { nvim } = this;
        let mode = '';
        for (let arg of context.args) {
            if (arg.startsWith('-mode=')) {
                mode = arg.replace('-mode=', '');
            }
        }
        let list = await nvim.eval(`split(execute("verbose ${mode}map"),"\n")`);
        let res = [];
        for (let line of list) {
            let ms = line.match(regex);
            if (ms) {
                let [, mode, key, more] = ms;
                res.push({
                    label: ` ${safe_1.default.magenta(mode)}\t${safe_1.default.blue(key)}\t${more}`,
                    filterText: `${key} ${more}`,
                    data: {
                        mode,
                        key,
                    }
                });
            }
        }
        return res;
    }
}
exports.default = Maps;
//# sourceMappingURL=maps.js.map